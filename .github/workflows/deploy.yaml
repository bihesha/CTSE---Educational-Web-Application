name: CI/CD Pipeline for Kubernetes

on:
  push:
    branches:
      - main  # Runs when code is pushed to the 'main' branch

jobs:
  build_and_push:
    name: Build Docker Image & Push to DockerHub
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to DockerHub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and Push Docker Image for UserManagementService
        run: |
          docker build -t bihesha1999/user-management-service_image:latest ./UserManagementService
          docker push bihesha1999/user-management-service_image:latest

      - name: Build and Push Docker Image for CourseManagementService
        run: |
          docker build -t bihesha1999/course-management-service_image:latest ./CourseManagementService
          docker push bihesha1999/course-management-service_image:latest

      - name: Build and Push Docker Image for PaymentManagementService
        run: |
          docker build -t bihesha1999/payment-management-service_image:latest ./PaymentManagementService
          docker push bihesha1999/payment-management-service_image:latest

      - name: Build and Push Docker Image for EnrollmentManagementService
        run: |
          docker build -t bihesha1999/enrollment-management-service_image:latest ./EnrollmentManagementService
          docker push bihesha1999/enrollment-management-service_image:latest

      - name: Build and Push Docker Image for api-gateway
        run: |
          docker build -t bihesha1999/api-gateway_image:latest ./api-gateway
          docker push bihesha1999/api-gateway_image:latest

      - name: Build and Push Client Docker Image
        run: |
          docker build -t bihesha1999/client_image:latest ./client
          docker push bihesha1999/client_image:latest

      - name: Build and Push Nginx Docker Image
        run: |
          docker build -t bihesha1999/proxy_image:latest ./proxy
          docker push bihesha1999/proxy_image:latest

  deploy:
    name: Deploy to AWS EKS
    needs: build_and_push
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      - name: Update kubeconfig for EKS
        run: aws eks update-kubeconfig --region ap-southeast-1 --name education-web

      - name: Apply Kubernetes Manifests
        run: |
          kubectl apply -f k8s/user-management-service.yaml
          kubectl apply -f k8s/user-management-service-deployment.yaml
          kubectl apply -f k8s/payment-management-service.yaml
          kubectl apply -f k8s/payment-management-service-deployment.yaml
          kubectl apply -f k8s/course-management-service.yaml
          kubectl apply -f k8s/course-management-service-deployment.yaml
          kubectl apply -f k8s/enrollment-management-service.yaml
          kubectl apply -f k8s/enrollment-management-service-deployment.yaml
          kubectl apply -f k8s/gateway-service.yaml
          kubectl apply -f k8s/gateway-deployment.yaml
          kubectl apply -f k8s/client-service.yaml
          kubectl apply -f k8s/client-service-deployment.yaml

      - name: Set Environment Variables for UserManagementService
        run: |
          kubectl set env deployment/user-management-service \
            MONGODB_URL="${{ secrets.USER_MANAGEMENT_MONGODB_URL }}" \
            SESSION_SECRET="${{ secrets.USER_MANAGEMENT_SESSION_SECRET }}" \
            NODE_ENV="production" \
            JWT_SECRET="${{ secrets.USER_MANAGEMENT_JWT_SECRET }}"

      - name: Set Environment Variables for CourseManagementService
        run: |
          kubectl set env deployment/course-management-service \
            MONGODB_URL="${{ secrets.COURSE_MANAGEMENT_MONGODB_URL }}"

      - name: Set Environment Variables for PaymentManagementService
        run: |
          kubectl set env deployment/payment-management-service \
            MONGODB_URL="${{ secrets.PAYMENT_MANAGEMENT_MONGODB_URL }}"

      - name: Set Environment Variables for EnrollmentManagementService
        run: |
          kubectl set env deployment/enrollment-management-service \
            MONGODB_URL="${{ secrets.ENROLLMENT_MANAGEMENT_MONGODB_URL }}"

      - name: Apply Nginx Proxy 
        run: |
          kubectl apply -f k8s/nginx-proxy-deployment.yaml

