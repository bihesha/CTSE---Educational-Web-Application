name: CI/CD Pipeline for Kubernetes

on:
  push:
    branches:
      - main

jobs:
  build_and_push:
    name: Build Docker Image & Push to DockerHub
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to DockerHub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and Push Docker Images
        run: |
          docker build -t bihesha1999/user-management-service_image:latest ./UserManagementService
          docker push bihesha1999/user-management-service_image:latest
          
          docker build -t bihesha1999/course-management-service_image:latest ./CourseManagementService
          docker push bihesha1999/course-management-service_image:latest
          
          docker build -t bihesha1999/payment-management-service_image:latest ./PaymentManagementService
          docker push bihesha1999/payment-management-service_image:latest
          
          docker build -t bihesha1999/enrollment-management-service_image:latest ./EnrollmentManagementService
          docker push bihesha1999/enrollment-management-service_image:latest
          
          docker build -t bihesha1999/api-gateway_image:latest ./api-gateway
          docker push bihesha1999/api-gateway_image:latest
          
          docker build -t bihesha1999/client_image:latest ./client
          docker push bihesha1999/client_image:latest
          
          docker build -t bihesha1999/proxy_image:latest ./proxy
          docker push bihesha1999/proxy_image:latest

  deploy:
    name: Deploy to AWS EKS
    needs: build_and_push
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      - name: Update kubeconfig for EKS
        run: aws eks update-kubeconfig --region ap-southeast-1 --name education-web

      - name: Create Kubernetes Secrets
        run: |
          # Create secret for Google OAuth
          kubectl create secret generic google-oauth-secrets \
            --from-literal=CLIENT_ID=${{ secrets.USER_MANAGEMENT_CLIENT_ID }} \
            --from-literal=CLIENT_SECRET=${{ secrets.USER_MANAGEMENT_CLIENT_SECRET }} \
            --dry-run=client -o yaml | kubectl apply -f -
          
          # Create secret for MongoDB URLs
          kubectl create secret generic mongodb-urls \
            --from-literal=USER_MANAGEMENT=${{ secrets.USER_MANAGEMENT_MONGODB_URL }} \
            --from-literal=COURSE_MANAGEMENT=${{ secrets.COURSE_MANAGEMENT_MONGODB_URL }} \
            --from-literal=PAYMENT_MANAGEMENT=${{ secrets.PAYMENT_MANAGEMENT_MONGODB_URL }} \
            --from-literal=ENROLLMENT_MANAGEMENT=${{ secrets.ENROLLMENT_MANAGEMENT_MONGODB_URL }} \
            --dry-run=client -o yaml | kubectl apply -f -
          
          # Create secret for JWT and session
          kubectl create secret generic auth-secrets \
            --from-literal=JWT_SECRET=${{ secrets.USER_MANAGEMENT_JWT_SECRET }} \
            --from-literal=SESSION_SECRET=${{ secrets.USER_MANAGEMENT_SESSION_SECRET }} \
            --dry-run=client -o yaml | kubectl apply -f -

      - name: Apply Kubernetes Manifests
        run: |
          kubectl apply -f k8s/
          
      - name: Verify Deployments
        run: |
          kubectl get pods -w
          kubectl get services